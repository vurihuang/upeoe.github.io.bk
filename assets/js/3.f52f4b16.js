(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{62:function(t,s,n){"use strict";n.r(s);var a=n(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h2",{attrs:{id:"preview"}},[t._v("Preview")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go version\ngo version go1.10 darwin/amd64\n")])]),n("p",[t._v("Useful website:")]),n("ul",[n("li",[n("a",{attrs:{href:"https://golang.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Golang 官方网站")])]),n("li",[n("a",{attrs:{href:"https://blog.golang.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Golang 官方博客")])]),n("li",[n("a",{attrs:{href:"https://golang.org/pkg",target:"_blank",rel:"noopener noreferrer"}},[t._v("Golang 标准库源码")])])]),n("h2",{attrs:{id:"chapter-1"}},[t._v("Chapter 1")]),n("h3",{attrs:{id:"hello-world"}},[t._v("Hello, world")]),n("p",[n("code",[t._v("ch1/0-helloworld.go")]),t._v(": 第一个 "),n("code",[t._v("Hello, world")]),t._v(" 应用")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Hello, world"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[t._v("通过 "),n("code",[t._v("package")]),t._v(" 对包进行组织管理，对代码进行模块化")]),n("li",[t._v("通过 "),n("code",[t._v("import")]),t._v(" 语句导入指定包的代码")]),n("li",[t._v("对所有包中一条约定俗成的原则是，成员名开头大写为公有成员("),n("code",[t._v("Println")]),t._v(")，成员们开头小写为私有成员("),n("code",[t._v("selfPrintln")]),t._v(")")]),n("li",[t._v("关键字 "),n("code",[t._v("func")]),t._v(" 定义一个方法(function/method)，"),n("code",[t._v("main")]),t._v(" 函数为一个可执行包的入口函数")])])]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go run ch1/0-helloworld.go\nHello, world\n")])]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go build ch1/0-helloworld.go\n$ ./0-helloworld.go\nHello, world\n")])]),n("p",[t._v("Go 的工具链(如 "),n("code",[t._v("go run")]),t._v(")将源代码及其依赖转成计算机的机器指令，编译一个或多个 "),n("code",[t._v(".go")]),t._v(" 源文件并链接库文件，生成最终的可执行文件。")]),n("p",[n("code",[t._v("go build")]),t._v(" 将源文件编译后生成可执行的二进制文件。")]),n("p",[t._v("除了 "),n("code",[t._v("run")]),t._v(" 和 "),n("code",[t._v("build")]),t._v(" 工具之外，还有：")]),n("ul",[n("li",[n("code",[t._v("go fmt")]),t._v(" - 把代码格式化为标准格式")]),n("li",[n("code",[t._v("go get")]),t._v(" - 下载指定路径的包")]),n("li",[n("code",[t._v("go doc")]),t._v(" - 查看指定包或函数的文档")])]),n("p",[t._v("比如下载 "),n("code",[t._v("goimports")]),t._v(" 包自动添加或删除 "),n("code",[t._v("import")]),t._v(" 包使用")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go get golang.org/x/tools/cmd/goimports\n")])]),n("p",[t._v("我们可以执行 "),n("code",[t._v("go doc")]),t._v(" 命令来查看 "),n("code",[t._v("Println")]),t._v(" 的文档：")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go doc fmt.Println\nfunc Println"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".interface"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n int, err error"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Println formats using the default formats "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" its operands and writes to\n    standard output. Spaces are always added between operands and a newline is\n    appended. It returns the number of bytes written and any "),n("span",{attrs:{class:"token function"}},[t._v("write")]),t._v(" error\n    encountered.\n")])]),n("h3",{attrs:{id:"命令行参数"}},[t._v("命令行参数")]),n("p",[n("code",[t._v("ch1/1-echo1.go")]),t._v(": 打印命令行参数")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sep "),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        s "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" sep "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        sep "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('" "')]),t._v(" \n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    fmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ go run ch1/1-echo1.go foo bar baz zoo\nfoo bar baz zoo\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[n("code",[t._v("import")]),t._v(" 导入包有两种方式，可以是直接加包名单行导入，也可以是使用 "),n("code",[t._v("()")]),t._v(" 写在一起，效果是一样的")]),n("li",[t._v("关键字 "),n("code",[t._v("var")]),t._v(" 定义一个变量(variable)，所有定义的变量都会赋予初始值（如 "),n("code",[t._v("int")]),t._v(" 类型初始值为 "),n("code",[t._v("0")]),t._v("， "),n("code",[t._v("string")]),t._v(" 类型初始值为 "),n("code",[t._v('""')]),t._v("， "),n("code",[t._v("bool")]),t._v(" 类型初始值为 "),n("code",[t._v("false")]),t._v(" 等等）")]),n("li",[t._v("变量声明左侧为变量名，右侧为变量类型，可以通过关键字的方式创建变量，也可以通过 "),n("code",[t._v(":=")]),t._v(" 语句从右往左自行推导变量类型，并且只能在函数体中使用")]),n("li",[n("code",[t._v("len()")]),t._v(" 函数为几个内置全局函数之一，可以直接调用")])])]),n("p",[t._v("Go 中只有 "),n("code",[t._v("for")]),t._v(" 一种循环语句，并且有如下两种形式：")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// 1. 初始化语句 + 条件 + 循环条件成立执行语句")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" initialization"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" condition"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" post "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token comment"}},[t._v("// zero or more statements")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 第一种的特殊方式，省略第一、第三个部分，保留第二个条件部分，类似 while 语句")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" condition "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token comment"}},[t._v("// some statements")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 更为特殊的方式，三个部分都省略，即无限循环")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token comment"}},[t._v("// some statements")]),t._v("\n\t"),n("span",{attrs:{class:"token comment"}},[t._v("// can use `break` or `return` to stop infinite loop")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("// 2. 搭配 range 语句")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" arr "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token comment"}},[t._v("// some statements")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[t._v("将上面代码改造成 "),n("code",[t._v("for...range")]),t._v(" 形式")]),n("p",[n("code",[t._v("ch1/2-echo2")]),t._v(": "),n("code",[t._v("for...range")]),t._v(" 打印命令行参数")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ts"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sep "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('""')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('""')]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ts "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" sep "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" arg\n\t\tsep "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('" "')]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[t._v("如果声明了局部变量没有使用，在编译的时候会报错，可以使用 "),n("code",[t._v("_")]),t._v(" 符号抛弃目标值")]),n("li",[n("code",[t._v("range")]),t._v(" 语句对可遍历的对象返回下标和元素值")])])]),n("p",[n("code",[t._v("ch1/3-echo3.go")])]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"strings"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Join")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('" "')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[t._v("数据量少的时候可以使用 "),n("code",[t._v("+")]),t._v(" 符号拼接字符串，数据量大的时候使用 "),n("code",[t._v("strings")]),t._v(" 包的 "),n("code",[t._v("Join")]),t._v(" 函数更高效")])])]),n("h3",{attrs:{id:"查找文件中的重复行"}},[t._v("查找文件中的重复行")]),n("p",[t._v("我们要实现的功能有点类似 "),n("code",[t._v("uniq")]),t._v(" 命令，不同之处在于 "),n("code",[t._v("uniq")]),t._v(" 过滤掉重复的行，而我们要输出重复的行。")]),n("p",[t._v("首先来创建一个目标文件 "),n("code",[t._v("ch1/dup-file.txt")])]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("foo\nfoo\nbar\nbaz\nzoo\nzoo\n")])]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{attrs:{class:"token function"}},[t._v("uniq")]),t._v(" ch1/dup-file.txt\nfoo\nbar\nbaz\nzoo\n")])]),n("p",[n("code",[t._v("ch1/4-dup1.go")]),t._v(": 查找重复行")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"bufio"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcounts "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("make")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("map")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tinput "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" bufio"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("NewScanner")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stdin"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Scan")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcounts"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Text")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" line"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" counts "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"%d\\t%s\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" ch1/dup-file.txt "),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" go run ch1/4-dup1.go\n2\tfoo\n2\tzoo\n")])]),n("p",[t._v("你也可以不通过文件输入的方式，选择终端直接读取 buffer，结束后按 "),n("code",[t._v("CTRL+D")]),t._v(" 发送 "),n("code",[t._v("EOF")]),t._v(" 信号。")]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[n("code",[t._v("map[string]int")]),t._v(" 表示键(key)为 "),n("code",[t._v("string")]),t._v(" 类型，值(value)为 "),n("code",[t._v("int")]),t._v(" 类型的 "),n("code",[t._v("map")]),t._v(" 集合")]),n("li",[n("code",[t._v("make")]),t._v(" 函数只用于创建 "),n("code",[t._v("slice")]),t._v(", "),n("code",[t._v("map")]),t._v(", "),n("code",[t._v("channel")]),t._v("，不返回指针；而使用 "),n("code",[t._v("new")]),t._v(" 进行分配会返回指针")]),n("li",[n("code",[t._v("Printf")]),t._v(" 可以格式化输出，例如如下表格的常用动词(verb)")])])]),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("verb")]),n("th",{staticStyle:{"text-align":"center"}},[t._v("作用")])])]),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%d")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化十进制整数")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%x, %o, %b")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化十六、八、二进制整数")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%f, %g, %e")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化浮点数")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%t")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化布尔值")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%c")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化字符(rune)(Unicode码点)")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%s")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化字符串")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%q")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化待双引号的字符串或带单引号的字符")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%v")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化变量的自然形式(natural format)")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%T")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("格式化变量类型")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("%%")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("百分号 "),n("code",[t._v("%")]),t._v(" 本身")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("\\t")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("制表符")])]),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("\\n")]),n("td",{staticStyle:{"text-align":"center"}},[t._v("换行符")])])])]),n("p",[t._v("Demo:")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\td "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("63")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"digit %d, hex %x, octal %o, bin %b\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tf "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("63.33")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"float %f, %g, %e\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tb_t "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\tb_f "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("\"bool true '%t', bool false '%t'\\n\"")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b_t"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b_f"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"rune %c\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0x4E2D")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ts "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"foo"')]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"string %s\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tq_s "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"bar"')]),t._v("\n\tq_c "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'b'")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"quote string %q, quote character %q\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q_s"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q_c"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tm "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("make")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("map")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tm"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v('"key"')]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"map %v\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"digit type %T, string type %T, character type %T, map type %T\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q_s"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q_c"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"%%\\t%%\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[t._v("输出")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("digit 63, hex 3f, octal 77, bin 111111\nfloat 63.330000, 63.33, 6.333000e+01\nbool true 'true', bool false 'false'\nrune 中\nstring foo\nquote string \"bar\", quote character 'b'\nmap map[key:value]\ndigit type int, string type string, character type int32, map type map[string]string\n%\t%\n")])]),n("p",[n("code",[t._v("ch1/6-open-file-1.go")]),t._v(": 读取文件")]),n("p",[t._v("先来看下 "),n("code",[t._v("os.Open")]),t._v(" 这个函数的文档")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("func Open(name string) (*File, error)\n\tOpen opens the named file for reading. If successful, methods on the\n\treturned file can be used for reading; the associated file descriptor has\n\tmode O_RDONLY. If there is an error, it will be of type *PathError.\n")])]),n("p",[t._v("可以看到，返回值有两个，一个 "),n("code",[t._v("File")]),t._v(" 类型指针，一个错误信息")]),n("p",[t._v("一种读取文件的方式为：")]),n("p",[n("code",[t._v("ch1/6-open-file-1.go")])]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"bufio"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfile "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tf"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Open")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fprintf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stderr"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"open file error %v\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tbuf "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("createScanner")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" buf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Scan")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Text")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("createScanner")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("File"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("bufio"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Scanner "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bufio"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("NewScanner")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[n("code",[t._v("os.Open")]),t._v(" 函数打开一个文件，返回值类型为 "),n("code",[t._v("*File")]),t._v(" 指针和错误对象")]),n("li",[n("code",[t._v("bufio.NewScanner")]),t._v(" 函数返回一个 "),n("code",[t._v("*Scanner")]),t._v(" 指针，每次读取文件一行内容， "),n("code",[t._v("Scan")]),t._v(" 函数判断是否到文件的结尾")]),n("li",[n("code",[t._v("createScanner")]),t._v(" 函数接收一个 "),n("code",[t._v("*File")]),t._v(" 指针引用的一个副本作为对象，类似其他编程语言中的引用传递，指向同一块内存空间")])])]),n("p",[t._v("另一种读取文件的方式：")]),n("p",[n("code",[t._v("ch1/7-open-file-2.go")])]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"io/ioutil"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfile "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tbuf"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ioutil"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ReadFile")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token function"}},[t._v("panic")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[n("code",[t._v("ioutil.ReadFile")]),t._v(" 读取整个文件并返回内容")]),n("li",[n("code",[t._v("defer-panic-recover")]),t._v(" 是 Go 中的一种异常处理机制，当遇到问题可以 "),n("code",[t._v("panic")]),t._v(" 出 "),n("code",[t._v("error")]),t._v("， 当遇到 "),n("code",[t._v("recover")]),t._v(" 时进行处理；除了 "),n("code",[t._v("err != nil")]),t._v(" 的处理方法你还能这么做，也许你可能会联想到 Java 中的 "),n("code",[t._v("try/catch")]),t._v(" 机制")])])]),n("p",[t._v("有了读文件的例子，我们下面的问题就是如何串起来读取文件后进行查找重复行")]),n("p",[n("code",[t._v("ch1/8-dup2.go")]),t._v(": 从标准输入或者文件查找重复行")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"bufio"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcounts "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("make")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("map")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfiles "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token function"}},[t._v("countLines")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stdin"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" counts"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" files "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tf"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Open")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fprintf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stderr"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"open file error: %v\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token function"}},[t._v("countLines")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" counts"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" line"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" counts "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"%d\\t%s\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("countLines")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("File"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" counts "),n("span",{attrs:{class:"token keyword"}},[t._v("map")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbuf "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" bufio"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("NewScanner")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" buf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Scan")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcounts"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("buf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Text")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[n("code",[t._v("ch1/9-dup3.go")]),t._v(": 文件输入查找重复行")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"io/ioutil"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"strings"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcounts "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("make")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("map")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token builtin"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token builtin"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tbuf"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ioutil"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ReadFile")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fprintf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stderr"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"open file error, %v\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("_")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" strings"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Split")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcounts"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("line"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" line"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("range")]),t._v(" counts "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"%d\\t%s\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[n("code",[t._v("ioutil.ReadFile")]),t._v(" 函数返回字节切片([]byte)，需要通过 "),n("code",[t._v("string()")]),t._v(" 转化为字符串")]),n("li",[t._v("通过 "),n("code",[t._v("strings.Split")]),t._v(" 函数根据 "),n("code",[t._v("\\n")]),t._v(" 回车符分割字符串, "),n("code",[t._v("Split")]),t._v(" 返回分割后的切片(slice)")])])]),n("h3",{attrs:{id:"绘制图片"}},[t._v("绘制图片")]),n("p",[t._v("我们接下来要绘制一个简单的图片，只有黑色一种颜色")]),n("p",[n("code",[t._v("ch1/10-image1.go")])]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"image"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"image/color"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"image/png"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tsize "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\trect "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" image"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Rect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\timg "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" image"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("NewRGBA")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rect"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{attrs:{class:"token comment"}},[t._v("// set image color")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" y "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" y "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" size"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" y"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" x "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" x "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" size"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" x"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\timg"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Set")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RGBA"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("255")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tf"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Create")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"image.png"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fatal")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" png"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Encode")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fatal")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" f"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fatal")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[t._v("关键字 "),n("code",[t._v("const")]),t._v(" 用来申明常量，表达式在编译时被计算，初始化后无法被再次修改")]),n("li",[t._v("几个 "),n("code",[t._v("image")]),t._v(" 包函数用于图片操作，具体内容可以查看文档")]),n("li",[n("code",[t._v("log")]),t._v(" 包用于格式化输出信息，输出到指定目标，可以是标准输出或文件等")]),n("li",[n("code",[t._v("if")]),t._v(" 语句中可以赋值并判断，使得一些代码更精简 "),n("code",[t._v("if initialization; conditions {}")])]),n("li",[n("code",[t._v("png.Encode")]),t._v(" 函数用于将 "),n("code",[t._v("Image")]),t._v(" 对象格式化为 "),n("code",[t._v("PNG")]),t._v(" 图片格式")]),n("li",[n("code",[t._v("log.Fatal")]),t._v(" 函数等价于 "),n("code",[t._v("fmt.Print")]),t._v(" 函数的作用，同时会执行 "),n("code",[t._v("os.Exit(1)")]),t._v(" 退出应用程序并返回状态码 1")])])]),n("p",[t._v("上面是输出一张图片，下面的例子是输出一张 GIF，动图内容为利萨茹曲线(Lissajous)，有兴趣的可以查看这个在线演示 "),n("a",{attrs:{href:"http://www.phy.hk/wiki/j/Chi/lissajous/lissajous_js_chi.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("廣義利薩如圖形")]),t._v("：")]),n("p",[n("code",[t._v("ch1/11-lissajous.go")]),t._v(": 利萨茹曲线动图")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"image"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"image/color"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"image/gif"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"math"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"math/rand"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" palette "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("color"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Color"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("color"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("White"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Black"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\twhiteIndex "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\tblackIndex "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 调色板中的位置")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tcycles  "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("\t\t"),n("span",{attrs:{class:"token comment"}},[t._v("// X轴正弦波循环次数")]),t._v("\n\t\tres     "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0.001")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 角分辨率")]),t._v("\n\t\tsize    "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("   "),n("span",{attrs:{class:"token comment"}},[t._v("// 图片尺寸")]),t._v("\n\t\tnframes "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("64")]),t._v("    "),n("span",{attrs:{class:"token comment"}},[t._v("// 动画帧数")]),t._v("\n\t\tdelay   "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("8")]),t._v("     "),n("span",{attrs:{class:"token comment"}},[t._v("// 延迟值(*10ms)")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tfreq "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" rand"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Float64")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3.0")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// Y轴正弦波频率")]),t._v("\n\tanim "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" gif"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GIF"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("LoopCount"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nframes"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tphase "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 初始偏振值")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" nframes"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\trect "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" image"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Rect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("size"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("size"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\timg "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" image"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("NewPaletted")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rect"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" palette"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" t "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0.0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" t "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" cycles"),n("span",{attrs:{class:"token operator"}},[t._v("*")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pi"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" t "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" res "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tx "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Sin")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\ty "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" math"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Sin")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("freq "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" phase"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\timg"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("SetColorIndex")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token function"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("size"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token number"}},[t._v("0.5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token function"}},[t._v("int")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("size"),n("span",{attrs:{class:"token operator"}},[t._v("+")]),n("span",{attrs:{class:"token number"}},[t._v("0.5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\tblackIndex"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tphase "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0.1")]),t._v("\n\t\tanim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delay "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("append")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delay"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delay"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tanim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Image "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("append")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Image"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tgif"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("EncodeAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stdout"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("anim"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[n("code",[t._v("go run 11-lissajous.go > lissajous.gif")]),t._v(" 可以查看动图结果")]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[n("code",[t._v("[]color.Color")]),t._v(" 是一个切片(slice)，定义切片的语法为 "),n("code",[t._v("var identifier []type")]),t._v("，或者使用前面提到的 "),n("code",[t._v("make")]),t._v(" 来创建，"),n("code",[t._v("make([]type, len)")])]),n("li",[n("code",[t._v("gif.GIF")]),t._v(" 是一个结构体(struct)，包含一组值或者字段的集合，内部变量可以通过 "),n("code",[t._v(".")]),t._v(" 进行访问")]),n("li",[n("code",[t._v("append")]),t._v(" 内置全局函数用来向一个切片添加元素并返回结果，有两种添加方式：\n"),n("ol",[n("li",[t._v("添加多个元素 "),n("code",[t._v("append(slice1, ele1, ele2)")]),t._v("，支持任意个数参数;")]),n("li",[t._v("添加包含在其他 "),n("code",[t._v("slice")]),t._v(" 的元素 "),n("code",[t._v("append(slice1, slice2...)")]),t._v("，只支持两个参数")])])])])]),n("h3",{attrs:{id:"获取url"}},[t._v("获取URL")]),n("p",[t._v("通常，我们可以通过 Linux 的 "),n("code",[t._v("curl")]),t._v(" 命令来发出网络请求获取数据，例如：")]),n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" --user-agent "),n("span",{attrs:{class:"token string"}},[t._v('"Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Mobile Safari/537.36"')]),t._v(" -I https://github.com\nHTTP/1.1 200 OK\nDate: Wed, 23 May 2018 02:40:37 GMT\nContent-Type: text/html"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" charset"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("utf-8\nServer: GitHub.com\nStatus: 200 OK\nCache-Control: no-cache\n")])]),n("p",[t._v("Go 自带并封装了网络请求的工具，使用起来非常方便。")]),n("p",[n("code",[t._v("ch1/12-curl.go")]),t._v(": 获取网络请求数据")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"io/ioutil"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n\t"),n("span",{attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\turl "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Args"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tresp"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fprintf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stderr"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"fetch error, %v\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tos"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Exit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tbuf"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ioutil"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ReadAll")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resp"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Body"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tresp"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Body"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Fprintf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stderr"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"reading error, %v\\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tos"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Exit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Printf")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"%s"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ go run 12-curl.go https://github.com\n# response body ellipsis...\n\n$ go run 12-curl.go http://some.domain\nfetch error, Get http://some.domain: dial tcp: lookup some.domain: no such host\nexit status 1\n")])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("ATTENTION")]),n("ol",[n("li",[n("code",[t._v("net/http")]),t._v(" 包提供了客户端和服务端的功能，比如发送一个客户端请求，或者起一个 Web 服务器(Server)")]),n("li",[n("code",[t._v("os.Exit")]),t._v(" 函数用于退出当前应用程序，参数为返回状态码，0 表示成功，非 0 表示失败；程序会立刻终止，用关键词 "),n("code",[t._v("defer")]),t._v(" 声明的延迟函数不会执行")])])])])}],!1,null,null,null);s.default=o.exports}}]);